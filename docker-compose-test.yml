x-mysql: &mysql
  environment:
    MYSQL_ALLOW_EMPTY_PASSWORD: true
  command: >
    mysqld
    --log-bin=mysql-bin.log
    --server-id 1
    --binlog-format=row
    --gtid_mode=on
    --enforce-gtid-consistency=on

x-mariadb: &mariadb
  environment:
    MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 1
  command: >
    --server-id=1
    --default-authentication-plugin=mysql_native_password
    --log-bin=master-bin
    --binlog-format=row

services:
  percona-5.7:
    <<: *mysql
    image: percona:5.7
    networks:
      - default

  percona-8.0:
    <<: *mysql
    image: percona:8.0
    platform: linux/amd64
    networks:
      - default

  mariadb-10.6:
    <<: *mariadb
    image: mariadb:10.6
    volumes:
      - type: bind
        source: ./.mariadb
        target: /opt/key_file
      - type: bind
        source: ./.mariadb/my.cnf
        target: /etc/mysql/my.cnf
    networks:
      - default

  pymysqlreplication:
    build:
      context: .
      dockerfile: test.Dockerfile
      args:
        MYSQL_5_7: percona-5.7
        MYSQL_8_0: percona-8.0
        MYSQL_8_0_PORT: 3306
        MARIADB_10_6: mariadb-10.6
        MARIADB_10_6_PORT: 3306

    command:
      - /bin/sh
      - -ce
      - |
        echo "wait mysql server"

        check_servers_up() {
          for s in percona-5.7 percona-8.0 mariadb-10.6; do
            mariadb -h "$$s" --user=root --execute "SELECT version();" || {
              echo "$$h not ready"
              return 1
            }
          done
          return 0
        }

        while ! check_servers_up; do
          sleep 1
        done

        echo "run pytest"
        for db in mysql-5 mariadb-10 mysql-8; do
          echo "testing with $$db"
          pytest -vv -k "not test_no_trailing_rotate_event and not test_end_log_pos" --db "$$db"
          echo "tested with $$db"
        done

    working_dir: /pymysqlreplication
    networks:
      - default
    depends_on:
      - percona-5.7
      - percona-8.0
      - mariadb-10.6

networks:
  default:
    driver: bridge
